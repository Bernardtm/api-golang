basePath: /api/v1
definitions:
  auth.Login2StepRequest:
    properties:
      otp:
        example: "123456"
        type: string
    required:
    - otp
    type: object
  auth.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: Password123#
        type: string
    required:
    - email
    - password
    type: object
  auth.PasswordResetRequest:
    properties:
      confirm_password:
        example: Password123#
        minLength: 6
        type: string
      password:
        example: Password123#
        maxLength: 40
        minLength: 8
        type: string
    required:
    - confirm_password
    - password
    type: object
  auth.RecoverPasswordRequest:
    properties:
      email:
        example: john.doe@example.com
        type: string
    required:
    - email
    type: object
  auth.TokenResponse:
    properties:
      token:
        type: string
    type: object
  menus.MenusRequest:
    properties:
      icon:
        type: string
      name:
        type: string
      orderIndex:
        type: integer
      status_uuid:
        type: string
      url:
        type: string
    type: object
  menus.MenusResponse:
    properties:
      creation_date:
        description: 'Data de criação (padrão: data atual)'
        type: string
      icon:
        description: Ícone do menu (opcional)
        type: string
      menu_uuid:
        description: UUID do menu (chave primária)
        type: string
      modification_date:
        description: Data de modificação (opcional)
        type: string
      name:
        description: Nome do menu
        type: string
      order_index:
        description: Índice de ordenação
        type: integer
      permission:
        description: Permissão associada ao menu
        type: string
      status_uuid:
        description: UUID do status (chave estrangeira)
        type: string
      url:
        description: URL associada ao menu
        type: string
    type: object
  shareds.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  shareds.MessageResponse:
    properties:
      message:
        type: string
    type: object
  status.StatusRequest:
    properties:
      creation_date:
        description: 'Data de criação (padrão: data atual)'
        type: string
      modification_date:
        description: Data de modificação (opcional)
        type: string
      name:
        description: Nome do status (único)
        type: string
      status_uuid:
        description: UUID do status (chave primária)
        type: string
    type: object
  status.StatusResponse:
    properties:
      creation_date:
        description: 'Data de criação (padrão: data atual)'
        type: string
      modification_date:
        description: Data de modificação (opcional)
        type: string
      name:
        description: Nome do status (único)
        type: string
      status_uuid:
        description: UUID do status (chave primária)
        type: string
    type: object
  users.UserRequest:
    description: Struct containing the data required to create/update a user
    properties:
      email:
        example: test@test.com
        type: string
      password:
        example: Password123#
        type: string
      phone:
        example: ""
        type: string
      position:
        example: ""
        type: string
      position_uuid:
        example: ""
        type: string
      status_uuid:
        example: ""
        type: string
      tax_number:
        example: "12345678901"
        type: string
      user_uuid:
        example: user_uuid
        type: string
      username:
        example: username
        type: string
    required:
    - email
    - username
    type: object
  users.UserResponse:
    properties:
      ModificationDate:
        type: string
      creation_date:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      position:
        type: string
      profile_image_link:
        type: string
      status_uuid:
        type: string
      tax_number:
        type: string
      user_uuid:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: Bernardtm Backend
  title: backend
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate the user
      parameters:
      - description: Login info
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      summary: Login a user
      tags:
      - Auth
  /auth/login/request-password-reset:
    post:
      consumes:
      - application/json
      description: Request password reset and send a verification code
      parameters:
      - description: Password request info
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.RecoverPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shareds.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      summary: Request password reset
      tags:
      - Auth
  /auth/login/reset-password:
    post:
      consumes:
      - application/json
      description: Reset password after validation, and send a email informing the
        password has changed
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Password reset info
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.PasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shareds.MessageResponse'
        "400":
          description: Bad Request
          schema:
            items:
              $ref: '#/definitions/shareds.ErrorResponse'
            type: array
      summary: Reset password
      tags:
      - Auth
  /auth/login/verify:
    post:
      consumes:
      - application/json
      description: Validate login 2FA code and generate a JWT token for API access
      parameters:
      - default: Bearer <token>
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 2-Step Login info
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.Login2StepRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      summary: Validate login 2FA code
      tags:
      - Auth
  /files:
    post:
      consumes:
      - multipart/form-data
      description: A new file will be created and uploaded to the server
      parameters:
      - description: The file to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new file
      tags:
      - Files
  /menus:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/menus.MenusResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all Menus
      tags:
      - Menus
    post:
      consumes:
      - application/json
      parameters:
      - description: Menu Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/menus.MenusRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new Menu
      tags:
      - Menus
  /menus/{id}:
    delete:
      parameters:
      - description: ID of the Menu
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Menu by ID
      tags:
      - Menus
    get:
      parameters:
      - description: ID of the Menu
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/menus.MenusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Menu by ID
      tags:
      - Menus
    put:
      consumes:
      - application/json
      parameters:
      - description: ID of the Menu
        in: path
        name: id
        required: true
        type: string
      - description: Updated Menu Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/menus.MenusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing Menu
      tags:
      - Menus
  /menus/paginate:
    get:
      parameters:
      - description: Page Number
        in: query
        name: page
        required: true
        type: integer
      - description: Page Size
        in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/menus.MenusResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Paginate Menus
      tags:
      - Menus
  /menus/user:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/menus.MenusResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Menus by User Logged in
      tags:
      - Menus
  /status:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/status.StatusResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all Status
      tags:
      - Status
    post:
      consumes:
      - application/json
      parameters:
      - description: Status Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/status.StatusRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new Status
      tags:
      - Status
  /status/{id}:
    delete:
      parameters:
      - description: ID of the Status
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Status by ID
      tags:
      - Status
    get:
      parameters:
      - description: ID of the Status
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/status.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Status by ID
      tags:
      - Status
    put:
      consumes:
      - application/json
      parameters:
      - description: ID of the Status
        in: path
        name: id
        required: true
        type: string
      - description: Updated Status Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/status.StatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing Status
      tags:
      - Status
  /status/paginate:
    get:
      parameters:
      - description: Page Number
        in: query
        name: page
        required: true
        type: integer
      - description: Page Size
        in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/status.StatusResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Paginate Status
      tags:
      - Status
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/users.UserResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all Users
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: User Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/users.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new User
      tags:
      - Users
  /users/{id}:
    delete:
      parameters:
      - description: ID of the User
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete User by ID
      tags:
      - Users
    get:
      parameters:
      - description: ID of the User
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get User by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      parameters:
      - description: ID of the User
        in: path
        name: id
        required: true
        type: string
      - description: Updated User Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/users.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an existing User
      tags:
      - Users
  /users/paginate:
    get:
      parameters:
      - description: Page Number
        in: query
        name: page
        required: true
        type: integer
      - description: Page Size
        in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/users.UserResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/shareds.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Paginate Users
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    description: 'Provide the JWT token in the format: Bearer <token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
